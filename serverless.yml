org: davila7
app: aws-node
service: crud-node-dynamodb
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  stage: staging
  environment:
      STAGE: ${self:custom.stage}
      DYNAMODB_PRODUCT_TABLE: ${self:custom.DYNAMODB_PRODUCT_TABLE.${self:custom.stage}}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:ListStreams
      Resource: 
        - arn:aws:dynamodb:${self:provider.region}:${param:DYNAMODB_ARN_ID}:table/${self:custom.DYNAMODB_PRODUCT_TABLE.${self:custom.stage}}

custom:
  stage: ${opt:stage, self:provider.stage}
  DYNAMODB_PRODUCT_TABLE:
    staging: product-staging-table
    prod: product-prod-table
  datadog:
    site: ${param:DATADOG_SITE}
    apiKey: ${param:DATADOG_API_KEY}

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get

  createProduct:
    handler: functions/create.createProduct
    events:
      - httpApi:
          path: /product
          method: post

  getProducts:
    handler: functions/get_products.getProducts
    events:
      - httpApi:
          path: /products
          method: get

resources:
  Resources:
    Table:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.DYNAMODB_PRODUCT_TABLE.${self:custom.stage}}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
plugins:
  - serverless-plugin-datadog


